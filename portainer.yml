# docker stack deploy -c portainer.yml portainer

version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  portainer-network:
    driver: overlay
    attachable: true
  traefik-network:
    external: true

volumes:
  portainer-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /volumes/portainer
services:
  agent:
    <<: *default-opts
    # Image tag (replace with yours)
    image: portainer/agent:2.11.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.35'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M

  portainer:
    <<: *default-opts
    # Image tag (replace with yours)
    image: portainer/portainer-ce:2.11.0
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "8000:8000"
    volumes:
      - portainer-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - portainer-network
      - traefik-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.35'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M
      labels:
        # Portainer URL (replace with yours)
        # - "traefik.http.routers.portainer.rule=Host(`your.domain`) && PathPrefix(`/portainer`)"
        #- "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
        #- "traefik.http.routers.portainer.middlewares=portainer-stripprefix"
        # - "traefik.http.routers.portainer.service=portainer"
        #- "traefik.http.services.portainer.loadbalancer.passhostheader=true"
        #- "traefik.http.middlewares.compresstraefik.compress=true"

        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`your.domain`) && PathPrefix(`/portainer`)"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        #### set TLS (https)
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
        - "traefik.http.services.portainer.loadbalancer.passhostheader=true"
        #### Apply rules (middlewares)
        - "traefik.http.routers.portainer.middlewares=RuleGrpMain"